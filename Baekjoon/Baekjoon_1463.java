// 1463. 1로 만들기

// by SonMinji_220402

import java.util.Scanner;

public class BJ1463re {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		// 정수 N (1 <= N <= 10^6)
		int N = sc.nextInt();
		
		// 작은 정수들에서 연산 횟수의 최솟값을 찾고 그 과정에서 규칙을 찾아서 
		// 그 규칙을 이용해 입력되는 정수의 연산 횟수 최솟값도 알아내기
    // 배열의 인덱스에 해당하는 정수를 1로 만드는 데 사용하는 연산 횟수의 최솟값을 저장할 배열
		// 인덱스를 입력되는 정수와 일치하게 사용하려고 배열을 하나 크게 만듬
		int[] dp = new int[N+1];
		// dp[idx]는 정수 idx를 1로 만드는 데 사용하는 연산 횟수의 최솟값을 의미함 
		dp[1] = 0;
			for(int i=2; i<=N; i++) { // i=2부터 i를 1로 만드는 데 사용하는 연산 횟수 찾기
				// 연산 횟수 최솟값을 저장할 변수 val
				// 우선 연산 횟수 최솟값을 문제에서 주어진 연산 3번인 1을 뺀다로 했을 때 사용한 연산 횟수로 초기화 함 
				// i를 1로 만드는 데 사용한 연산 횟수는 i-1을 1로 만드는 데 사용한 연산 횟수에 1을 더한 값
				// 1을 더하는 것은 i를 i-1로 만들려면 연산 한 번 해야하니까 그 때 사용한 연산 횟수를 더해주는 것
				int val = dp[i-1] + 1;
				// 문제에서 주어진 연산 1번처럼 i가 3으로 나누어 떨어지면
				if(i % 3 == 0) {
					// val = dp[i/3] + 1;	
					// i/3을 인덱스로 갖는 배열의 값 즉 i/3을 1로 만드는 데 사용한 연산 횟수의 최솟값에 +1 해줌 
					// 1을 더하는 것은 i를 i/3으로 만들려면 연산 한 번 해야하니까 그 때 사용한 연산 횟수를 더해주는 것
					// i를 1로 만드는 데 사용한 연산 횟수의 최솟값을 배열 값으로 저장해야하므로
					// 위에서 구한 val과 이번에 구한 연산 횟수를 비교하여 더 작은 값을 val에 저장
					val = dp[i/3] + 1 < val ? dp[i/3] + 1 : val;
				} 
				// 문제에서 주어진 연산 2번처럼 i가 2로 나누어 떨어지면
				if(i % 2 == 0) {
					// i/2를 인덱스로 갖는 배열의 값 즉 i/2를 1로 만드는 데 사용한 연산 횟수의 최솟값에 +1 해줌 
					// 1을 더하는 것은 i를 i/2로 만들려면 연산 한 번 해야하니까 그 때 사용한 연산 횟수를 더해주는 것
					// i를 1로 만드는 데 사용한 연산 횟수의 최솟값을 배열 값으로 저장해야하므로
					// 위에서 구한 val과 이번에 구한 연산 횟수를 비교하여 더 작은 값을 val에 저장
					val = dp[i/2] + 1 < val ? dp[i/2] + 1 : val;
				}
				
				// val은 i를 1로 만드는 데 사용한 연산 횟수의 최솟값이므로
				// 인덱스가 i인 배열의 값을 val로 저장
				dp[i] = val;
			}
		
		// 결과 출력
		System.out.println(dp[N]);
	}
	
}
